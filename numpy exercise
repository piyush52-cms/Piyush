1. import numpy as np
a=np.array([1,2,3])
b=[4,7,8,12]
print(a)
print(type(a))
print(a.shape)
print(b)
print(type(b))

output:[1 2 3]
<class 'numpy.ndarray'>
(3,)
[4, 7, 8, 12]
<class 'list'>


2. import numpy as np
a=np.array([1,2,3])
print(a[0],a[1],a[2])
a[0]=5
print(a)

output:1 2 3
[5 2 3]


3. b=np.array([[1,2,3],[4,5,6]])
print(b.shape)
print(b)
print(b[0,0],b[0,1],b[0,2])
print(b[1,0],b[1,1],b[1,2])

ootput:(2, 3)
[[1 2 3]
 [4 5 6]]
1 2 3
4 5 6


4. #create an array of all zeros
a=np.zeros((2,2))
print(a)
#create an array of all ones
b=np.ones((1,2))
print(b)
#Create a constant array
c=np.full((2,2),7)
print(c)
d=np.full((3,5),2)
print(d)

output:[[0. 0.]
 [0. 0.]]
[[1. 1.]]
[[7 7]
 [7 7]]
[[2 2 2 2 2]
 [2 2 2 2 2]
 [2 2 2 2 2]]


5. #create a 2*2 identity matrix
d=np.eye(2)
print(d)
#create an array filled with random values
e=np.random.random((2,2))
print(e)

output:[[1. 0.]
 [0. 1.]]
[[0.00681056 0.11360668]
 [0.34293251 0.62811813]]


6. import numpy as np
np.linspace(2.0,3.0,num=5)

output:array([2.  , 2.25, 2.5 , 2.75, 3.  ])


7. import numpy as np
np.linspace(2.0,3.0,num=5,endpoint=False)

output:array([2. , 2.2, 2.4, 2.6, 2.8])


8. import numpy as np
np.linspace(2.0,3.0,num=5,retstep=True)

output:(array([2.  , 2.25, 2.5 , 2.75, 3.  ]), 0.25)


9. #Slicing
import numpy as np
a=np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12]])
b=a[::]
c=a[:2,1:3]
d=a[1:3,2:4]
print(b)
print(c)
print(d)

output:[[ 1  2  3  4]
 [ 5  6  7  8]
 [ 9 10 11 12]]
[[2 3]
 [6 7]]
[[ 7  8]
 [11 12]]


10. import numpy as np
a=np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12]])
q=a[0:2,1:2]
r=a[2:3,0:2]
s=a[:2,1:]
p=a[-2:-1,-2:-1]
t=a[-2:1,1:3]
print(q)
print(r)
print(s)
print(p)
print(t)

output:[[2]
 [6]]
[[ 9 10]]
[[2 3 4]
 [6 7 8]]
[[7]]
[]


11. import numpy as np
a=np.array([[1,2],[3,4],[5,6]])
print(a)
print(a[[0,1,2],[0,1,0]])
print(np.array([a[0,0],a[1,1],a[2,0]]))
print(a[[0,0],[1,1]])
print(np.array([a[0,1],a[0,1]]))

output:[[1 2]
 [3 4]
 [5 6]]
[1 4 5]
[1 4 5]
[2 2]
[2 2]


12. import numpy as np
a=np.array([[1,2,3],[4,5,6],[7,8,9],[10,11,12]])
print(a)
b=np.array([0,2,0,1])
print(a[np.arange(4),b])
a[np.arange(4),b]+=10
print(a)

output:[[ 1  2  3]
 [ 4  5  6]
 [ 7  8  9]
 [10 11 12]]
[ 1  6  7 11]
[[11  2  3]
 [ 4  5 16]
 [17  8  9]
 [10 21 12]]


13. import numpy as np
a=np.array([[1,2],[3,4],[5,6]])
bool_idx=(a>2)
print(bool_idx)
print(a[bool_idx])
print(a[a>2])

output:[[False False]
 [ True  True]
 [ True  True]]
[3 4 5 6]
[3 4 5 6]


14. import numpy as np
x=np.array([1,2])
print(x.dtype)
x=np.array([1.0,2.0])
print(x.dtype)
x=np.array([1,2],dtype=np.int64)
print(x.dtype)

output:int32
float64
int64


15. import numpy as np
x=np.array([[1,2],[3,4]],dtype=np.float64)
y=np.array([[5,6],[7,8]],dtype=np.float64)
print(x+y)
print(np.add(x,y))2
print(x*y)
print(np.multiply(x,y))
print(x/y)
print(np.divide(x,y))
print(np.sqrt(x))


output:[[ 6.  8.]
 [10. 12.]]
[[ 6.  8.]
 [10. 12.]]
[[ 5. 12.]
 [21. 32.]]
[[ 5. 12.]
 [21. 32.]]
[[0.2        0.33333333]
 [0.42857143 0.5       ]]
[[0.2        0.33333333]
 [0.42857143 0.5       ]]
[[1.         1.41421356]
 [1.73205081 2.        ]]
output:
